[{"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\index.js":"1","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Fbase.js":"2","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\App.js":"3","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\GlobalStyles.js":"4","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Router.js":"5","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Search.js":"6","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Home.js":"7","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Covid19.js":"8","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Profile.js":"9","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Comparison.js":"10","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Auth.js":"11","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\MersAndSars.js":"12","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Header.js":"13","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Smallpox.js":"14","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Upload.js":"15","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper.js":"16","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\VirusDropdown.js":"17","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Comparison.js":"18","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\MapChart.js":"19","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3MersSars.js":"20","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\SymptomDropdown.js":"21","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper2.js":"22"},{"size":288,"mtime":1611836251937,"results":"23","hashOfConfig":"24"},{"size":603,"mtime":1611565761650,"results":"25","hashOfConfig":"24"},{"size":778,"mtime":1611836279698,"results":"26","hashOfConfig":"24"},{"size":755,"mtime":1611845979205,"results":"27","hashOfConfig":"24"},{"size":1691,"mtime":1611856090461,"results":"28","hashOfConfig":"24"},{"size":28,"mtime":1611233860051,"results":"29","hashOfConfig":"24"},{"size":26,"mtime":1611654890208,"results":"30","hashOfConfig":"24"},{"size":6485,"mtime":1611597241865,"results":"31","hashOfConfig":"24"},{"size":509,"mtime":1611653726373,"results":"32","hashOfConfig":"24"},{"size":1075,"mtime":1611872929440,"results":"33","hashOfConfig":"24"},{"size":3888,"mtime":1611847405340,"results":"34","hashOfConfig":"24"},{"size":1068,"mtime":1611837442050,"results":"35","hashOfConfig":"24"},{"size":2320,"mtime":1611872830641,"results":"36","hashOfConfig":"24"},{"size":1744,"mtime":1611856090463,"results":"37","hashOfConfig":"24"},{"size":2493,"mtime":1611856090464,"results":"38","hashOfConfig":"24"},{"size":962,"mtime":1611845802373,"results":"39","hashOfConfig":"24"},{"size":583,"mtime":1611421792201,"results":"40","hashOfConfig":"24"},{"size":15993,"mtime":1611873465928,"results":"41","hashOfConfig":"24"},{"size":118,"mtime":1611872844654,"results":"42","hashOfConfig":"24"},{"size":12732,"mtime":1611872416055,"results":"43","hashOfConfig":"24"},{"size":694,"mtime":1611871572546,"results":"44","hashOfConfig":"24"},{"size":968,"mtime":1611869283745,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"16trfj0",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\index.js",["99"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Fbase from './Components/Fbase';\nimport App from './Components/App';\n\n// console.log(firebase);\n// It's responsible for attaching our react elements to the DOM.\nReactDOM.render(<App />, document.getElementById('root'));\n",["100","101"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Fbase.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\App.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\GlobalStyles.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Router.js",["102"],"import React, {useState} from 'react';\r\nimport {BrowserRouter as Browser, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Home from '../Routes/Home';\r\nimport Covid19 from '../Routes/Covid19';\r\nimport Search from '../Routes/Search';\r\nimport MersAndSars from '../Routes/MersAndSars';\r\nimport Smallpox from '../Routes/Smallpox';\r\nimport Comparison from '../Routes/Comparison';\r\nimport Profile from '../Routes/Profile';\r\nimport Upload from '../Routes/Upload';\r\nimport Header from './Header';\r\nimport Auth from '../Routes/Auth';\r\n\r\nfunction Router({isLoggedIn}){\r\n    return (\r\n        <Browser>\r\n          <>\r\n            {isLoggedIn && <Header /> }\r\n            <Switch>\r\n              {isLoggedIn ? (\r\n                <>\r\n                   <Route exact path=\"/\">\r\n                     <Home />\r\n                   </Route> \r\n                   <Route path=\"/covid19\" component={Covid19} />\r\n                   <Route path=\"/search\" component={Search} />\r\n                   <Route path=\"/mersandsars\" component={MersAndSars} />\r\n                   <Route path=\"/smallpox\" component={Smallpox} />\r\n                   <Route path=\"/comparison\" component={Comparison} />\r\n                   <Route path=\"/profile\" component={Profile} />\r\n                   <Route path=\"/upload\" component={Upload} />\r\n                   <Redirect from=\"*\" to=\"/\" /> \r\n                </>\r\n              ):(\r\n               <> \r\n                <Route exact path=\"/\">\r\n                  <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" /> \r\n               </>\r\n              )}\r\n          </Switch>\r\n          </>\r\n        </Browser>\r\n    )\r\n    \r\n}\r\nexport default Router;","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Search.js",["103"],"export default ()=>\"Search\";","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Home.js",["104"],"export default ()=>\"Home\";","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Covid19.js",["105"],"import React, { useEffect, useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\"\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Form from 'react-bootstrap/Form'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n// Referances\r\n// Styling - https://react-bootstrap.github.io/components/cards/\r\n// Styling - https://react-bootstrap.github.io/getting-started/introduction/\r\n// Get API - https://www.npmjs.com/package/axios\r\n// Time formats - https://www.npmjs.com/package/react-moment\r\n// Search bar - https://react-bootstrap.github.io/components/forms/\r\n// Google map - https://www.npmjs.com/package/google-map-react\r\n\r\nfunction Covid19(){\r\n    // Storing data inside array\r\n\r\n    // Top cards\r\n    const[latest, setLatest] = useState([]);\r\n    // Country cards\r\n    const[results, setResults] = useState([]);\r\n    // Search bar\r\n    const[searchCountry, setSearchCountry] = useState(\"\");\r\n        \r\n    // Dealing with two APIs at once\r\n    useEffect(() => {\r\n        axios\r\n            .all([\r\n                // API for cards (cases, deaths, recoveres values) \r\n                axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n                // API for countrys\r\n                axios.get(\"https://corona.lmao.ninja/v2/countries\")\r\n        ])\r\n        .then(responceArr => {\r\n            setLatest(responceArr[0].data);\r\n            setResults(responceArr[1].data);\r\n        })\r\n        // Return an error (if any)\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n        \r\n    // Getting updated time by converting miliseconds\r\n    const date = new Date(parseInt(latest.updated))\r\n    const lastUpdated = date.toString();\r\n\r\n    // Filter search\r\n    const filterCountry = results.filter(item  =>{\r\n        // If search and country the same -> return info\r\n        return searchCountry !== \"\" ? item.country.includes(searchCountry) : item;\r\n    })\r\n\r\n    // Assigning country markers to cases \r\n    const countriesLocation = results.map((data, i) => {\r\n        return (\r\n            <div\r\n                // Using latitude and longitude to plot\r\n                lat={data.countryInfo.lat}\r\n                lng={data.countryInfo.long}\r\n                // Various styling of marker\r\n                style={{\r\n                    color: \"black\",\r\n                    backgroundColor: \"#FFF\",\r\n                    height: \"25px\",\r\n                    width: \"35px\",\r\n                }}\r\n            >\r\n                {data.cases}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // Creating a reusable component for country data\r\n    const countries = filterCountry.map((data, i) => {\r\n        return (\r\n            <Card\r\n            key={i}\r\n                bg=\"dark\"\r\n                text=\"light\"\r\n                className=\"text-center\"\r\n                style={{margin: \"10px\"}}\r\n            >\r\n\r\n            <Card.Img variant= \"top\" src={data.countryInfo.flag} height=\"350px\"/>\r\n            <Card.Body>\r\n                <Card.Title>{data.country}</Card.Title>\r\n                <Card.Text>Cases {data.cases}</Card.Text>\r\n                <Card.Text>Deaths {data.deaths}</Card.Text>\r\n                <Card.Text>Recovered {data.recovered}</Card.Text>\r\n                <Card.Text>Today's Cases {data.todayCases}</Card.Text>\r\n                <Card.Text>Today's Deaths {data.todayDeaths}</Card.Text>\r\n                <Card.Text>Active {data.active}</Card.Text>\r\n                <Card.Text>Critical {data.critical}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n        )\r\n    })\r\n\r\n    // Adapted from https://www.npmjs.com/package/react-columns\r\n    var queries = [{\r\n        columns: 2,\r\n        query: 'min-width: 500px'\r\n    }, {\r\n        columns: 3,\r\n        query: 'min-width: 1000px'\r\n    }];\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <h3>Live Covid-19 Stats</h3>\r\n            <br/>\r\n        \r\n            <div style={{ height: '100vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyCMOO2VKuGpExDi9NjZ0jAofu5FOGJ4QbE\" }}\r\n                    defaultCenter={{lat: 59.95, lng: 30.33}}\r\n                    defaultZoom={10}\r\n                >\r\n                    {countriesLocation}\r\n                </GoogleMapReact>\r\n        </div>\r\n\r\n      \r\n            <CardDeck>\r\n                <Card bg=\"secondary\" text=\"white\" className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Cases</Card.Title>\r\n                    <Card.Text>\r\n                        {latest.cases}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card bg=\"danger\" text={\"white\"} className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Deaths</Card.Title>\r\n                    <Card.Text>\r\n                        {latest.deaths}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card bg=\"success\" text={\"white\"} className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Recovered</Card.Title>\r\n                    <Card.Text>\r\n                        {latest.recovered}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardDeck>\r\n\r\n            <Form>\r\n                <Form.Group controlId=\"formGroupSearch\">\r\n                    <Form.Label>Search Country</Form.Label>\r\n                    <br/>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter a Country by name\" onChange={e => setSearchCountry(e.target.value)} />\r\n                </Form.Group>\r\n            </Form>\r\n            <br/>\r\n            <CardColumns> {countries} </CardColumns>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Covid19;","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Profile.js",["106"],"import { authService } from 'Components/Fbase';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst Out  = styled.button`\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    border: none;\r\n    padding: 10px 0px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    width: 150px;\r\n    background: white;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default () => {\r\n\r\n    const onLogOutClick = () => authService.signOut();\r\n     \r\n    return <><Out onClick={onLogOutClick}>Log Out</Out></>;\r\n}","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Comparison.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Auth.js",["107","108"],"import { authService, firebaseInstance } from 'Components/Fbase';\r\nimport styled from 'styled-components';\r\nimport React, {useState} from 'react';\r\n\r\nconst Form = styled.form`\r\n    display:flex;\r\n`;\r\n\r\nconst Error = styled.h2`\r\n    color: tomato;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Box= styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst Sn = styled.span`\r\n    color: #04aaff;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n    font-size: 18px;\r\n    text-decoration: underline;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    border-radius: 20px;\r\n    border: 1px solid black;\r\n    text-align: center;\r\n    background-color: white;\r\n    color: black;\r\n    box-sizing: content-box;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n    cursor: pointer;\r\n    width: 300px;\r\n    padding: 7px 20px;\r\n    text-align: center;\r\n    color: white;\r\n    border-radius: 20px;\r\n    background-color: #04aaff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        //console.log(event.target.name);\r\n        const {\r\n            target: { name, value},\r\n        } = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }else{\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    const onSocialClick = async (event) => {\r\n        //console.log(event.target.name);\r\n        const {\r\n            target:{name}\r\n        } = event;\r\n\r\n        let provider;\r\n        if(name === \"google\"){\r\n            // Creates the provider object\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name == \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input \r\n                    name=\"email\" \r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email} \r\n                    onChange={onChange} \r\n                />\r\n                <Input \r\n                    name=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required \r\n                    value={password} \r\n                    onChange={onChange} \r\n                />\r\n                <Input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" } />\r\n                <Error>{error}</Error>\r\n            </Form>\r\n            <Sn onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</Sn>\r\n            <Box>\r\n                <Btn onClick={onSocialClick} name=\"google\">Continue with Google</Btn>\r\n                <Btn onClick={onSocialClick} name=\"github\">Continue with Github</Btn>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default Auth;\r\n   ","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\MersAndSars.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Header.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Smallpox.js",["109"],"import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction Smallpox() {\r\n    return(\r\n        <div>\r\n        <div><select>\r\n  <option selected value=\"year\">Year</option>\r\n  <option value=\"country\">Country</option>\r\n  \r\n</select>\r\n</div>\r\n        <Chart\r\n  width={'100%'}\r\n  height={'100%'}\r\n  chartType=\"GeoChart\"\r\n  data={[\r\n    ['Country','No of Cases'],\r\n    ['Algeria',755],\r\n    ['Austria',18],\r\n    ['Belgium', 21],\r\n    ['Bulgaria', 22],\r\n    ['Burma', 987],\r\n    ['Chile',1171],\r\n   // ['Czechoslovakia',1642],\r\n    //['Democratic Republic of Congo',1497],\r\n    ['Egypt',93],\r\n    ['Finland',27],\r\n    ['Germany',680],\r\n    ['Greece',250],\r\n    ['Hungary',131],\r\n    ['Indonesia',1445],\r\n    ['Iraq',475],\r\n    ['Italy',4644],\r\n    ['Japan',889],\r\n    ['Kenya',200],\r\n    //['Korea',8316],\r\n    ['Malaysia',232],\r\n    ['Morocco',203],\r\n    ['Netherlands',1],\r\n    ['Nigeria',1031],\r\n    ['Panama',215],\r\n    ['Romania',2744],\r\n    ['South Africa',1108],\r\n    ['Sri Lanka',18],\r\n    ['Tanzania', 1427],\r\n    ['Thailand', 404],\r\n    ['Russia', 100004],\r\n    ['Uganda', 506],\r\n    ['United Kingdom', 442],\r\n    ['United States', 108487],\r\n    ['Uruguay', 31],\r\n    ['Zimbabwe', 515],\r\n    \r\n    \r\n  ]}\r\n\r\n  options={{\r\n    region: 'world',\r\n    colorAxis: { colors: ['orange','yellow', 'green','blue', 'darkblue', 'red'] },\r\n  }}\r\n  // Note: you will need to get a mapsApiKey for your project.\r\n  // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n  mapsApiKey=\"YOUR_KEY_HERE\"\r\n // rootProps={{ 'data-testid': '1' }}\r\n/>\r\n</div>\r\n\r\n    )\r\n}\r\nexport default Smallpox;\r\n//adapted from https://www.youtube.com/watch?v=oX7Wqavzoc0","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Upload.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\VirusDropdown.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Comparison.js",["110","111","112","113","114","115","116"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\MapChart.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3MersSars.js",["117","118","119","120","121","122","123"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\SymptomDropdown.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper2.js",[],{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":1,"column":1,"nodeType":"135","endLine":1,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":1,"column":1,"nodeType":"135","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"136","line":104,"column":9,"nodeType":"126","messageId":"127","endLine":104,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":17,"column":1,"nodeType":"135","endLine":22,"endColumn":2},{"ruleId":"137","severity":1,"message":"138","line":103,"column":23,"nodeType":"139","messageId":"140","endLine":103,"endColumn":25},{"ruleId":"124","severity":1,"message":"141","line":107,"column":15,"nodeType":"126","messageId":"127","endLine":107,"endColumn":19},{"ruleId":"124","severity":1,"message":"142","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"143","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"144","line":14,"column":7,"nodeType":"126","messageId":"127","endLine":14,"endColumn":11},{"ruleId":"124","severity":1,"message":"145","line":15,"column":7,"nodeType":"126","messageId":"127","endLine":15,"endColumn":11},{"ruleId":"124","severity":1,"message":"146","line":16,"column":7,"nodeType":"126","messageId":"127","endLine":16,"endColumn":11},{"ruleId":"124","severity":1,"message":"147","line":32,"column":15,"nodeType":"126","messageId":"127","endLine":32,"endColumn":20},{"ruleId":"124","severity":1,"message":"148","line":47,"column":15,"nodeType":"126","messageId":"127","endLine":47,"endColumn":19},{"ruleId":"124","severity":1,"message":"149","line":61,"column":15,"nodeType":"126","messageId":"127","endLine":61,"endColumn":20},{"ruleId":"124","severity":1,"message":"143","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"150","line":4,"column":7,"nodeType":"126","messageId":"127","endLine":4,"endColumn":10},{"ruleId":"124","severity":1,"message":"144","line":5,"column":7,"nodeType":"126","messageId":"127","endLine":5,"endColumn":11},{"ruleId":"124","severity":1,"message":"151","line":16,"column":7,"nodeType":"126","messageId":"127","endLine":16,"endColumn":14},{"ruleId":"124","severity":1,"message":"152","line":17,"column":7,"nodeType":"126","messageId":"127","endLine":17,"endColumn":14},{"ruleId":"124","severity":1,"message":"149","line":40,"column":15,"nodeType":"126","messageId":"127","endLine":40,"endColumn":20},{"ruleId":"124","severity":1,"message":"153","line":54,"column":15,"nodeType":"126","messageId":"127","endLine":54,"endColumn":20},"no-unused-vars","'Fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["154"],"no-negated-in-lhs",["155"],"'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'queries' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'Dropdown' is defined but never used.","'svg' is defined but never used.","'url2' is assigned a value but never used.","'url3' is assigned a value but never used.","'url4' is assigned a value but never used.","'ttsvg' is assigned a value but never used.","'tsvg' is assigned a value but never used.","'tsvg2' is assigned a value but never used.","'url' is assigned a value but never used.","'MWIDTH3' is assigned a value but never used.","'HEIGHT3' is assigned a value but never used.","'tsvg3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]