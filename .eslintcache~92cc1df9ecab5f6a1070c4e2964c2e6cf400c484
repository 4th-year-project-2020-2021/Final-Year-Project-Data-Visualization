[{"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\index.js":"1","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\App.js":"2","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Router.js":"3","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\GlobalStyles.js":"4","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Smallpox.js":"5","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\MersAndSars.js":"6","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Upload.js":"7","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Comparison.js":"8","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Header.js":"9","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Covid19.js":"10","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Home.js":"11","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper.js":"12","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper2.js":"13","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\VirusDropdown.js":"14","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\SymptomDropdown.js":"15","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3MersSars.js":"16","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Comparison.js":"17","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Piechart.js":"18"},{"size":157,"mtime":1613142346241,"results":"19","hashOfConfig":"20"},{"size":338,"mtime":1613142362413,"results":"21","hashOfConfig":"20"},{"size":1177,"mtime":1613142349788,"results":"22","hashOfConfig":"20"},{"size":718,"mtime":1613676420007,"results":"23","hashOfConfig":"20"},{"size":1918,"mtime":1612560113346,"results":"24","hashOfConfig":"20"},{"size":1068,"mtime":1611837442050,"results":"25","hashOfConfig":"20"},{"size":2738,"mtime":1612560113349,"results":"26","hashOfConfig":"20"},{"size":1075,"mtime":1611872929440,"results":"27","hashOfConfig":"20"},{"size":2094,"mtime":1613676420008,"results":"28","hashOfConfig":"20"},{"size":8411,"mtime":1613676420011,"results":"29","hashOfConfig":"20"},{"size":421,"mtime":1613676420013,"results":"30","hashOfConfig":"20"},{"size":900,"mtime":1612605535270,"results":"31","hashOfConfig":"20"},{"size":1044,"mtime":1612529247690,"results":"32","hashOfConfig":"20"},{"size":744,"mtime":1611959389464,"results":"33","hashOfConfig":"20"},{"size":841,"mtime":1612034626066,"results":"34","hashOfConfig":"20"},{"size":36334,"mtime":1613742123748,"results":"35","hashOfConfig":"20"},{"size":26323,"mtime":1613742121280,"results":"36","hashOfConfig":"20"},{"size":3476,"mtime":1613738331292,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"16trfj0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\index.js",[],["81","82"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\App.js",["83","84"],"import React, {useEffect, useState} from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\n\nfunction App() {\n    \n\n    return (\n      <>\n        <Router/> \n        <GlobalStyles />\n        <footer>&copy; {new Date().getFullYear()} React Data Visualization</footer>\n      </>\n    )\n}\n\nexport default App;\n","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Router.js",["85"],"import React, {useState} from 'react';\r\nimport {BrowserRouter as Browser, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Home from '../Routes/Home';\r\nimport Covid19 from '../Routes/Covid19';\r\nimport MersAndSars from '../Routes/MersAndSars';\r\nimport Smallpox from '../Routes/Smallpox';\r\nimport Comparison from '../Routes/Comparison';\r\nimport Upload from '../Routes/Upload';\r\nimport Header from './Header';\r\n\r\nfunction Router({isLoggedIn}){\r\n    return (\r\n        <Browser>\r\n          <>\r\n            <Header />\r\n            <Switch>\r\n                <>\r\n                   <Route exact path=\"/\">\r\n                     <Home />\r\n                   </Route> \r\n                   <Route path=\"/covid19\" component={Covid19} />\r\n                   <Route path=\"/mersandsars\" component={MersAndSars} />\r\n                   <Route path=\"/smallpox\" component={Smallpox} />\r\n                   <Route path=\"/comparison\" component={Comparison} />\r\n                   <Route path=\"/upload\" component={Upload} />\r\n                   <Redirect from=\"*\" to=\"/\" /> \r\n                </>\r\n          </Switch>\r\n          </>\r\n        </Browser>\r\n    )\r\n    \r\n}\r\nexport default Router;","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\GlobalStyles.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Smallpox.js",["86"],"import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst paragraphStyle = {\r\n  marginTop: '10px',\r\n  marginBottom: '10px'\r\n};\r\n\r\n\r\nfunction Smallpox() {\r\n    return(\r\n        <div>\r\n        \r\n        <p style={paragraphStyle}><h3>Smallpox cases - hover over country to see case numbers</h3></p>\r\n        <div><select>\r\n  <option selected value=\"year\">Year</option>\r\n  <option value=\"country\">Country</option>\r\n  \r\n</select>\r\n</div>\r\n        <Chart\r\n  width={'100%'}\r\n  height={'100%'}\r\n  chartType=\"GeoChart\"\r\n  data={[\r\n    ['Country','No of Cases'],\r\n    ['Algeria',755],\r\n    ['Austria',18],\r\n    ['Belgium', 21],\r\n    ['Bulgaria', 22],\r\n    ['Burma', 987],\r\n    ['Chile',1171],\r\n   // ['Czechoslovakia',1642],\r\n    //['Democratic Republic of Congo',1497],\r\n    ['Egypt',93],\r\n    ['Finland',27],\r\n    ['Germany',680],\r\n    ['Greece',250],\r\n    ['Hungary',131],\r\n    ['Indonesia',1445],\r\n    ['Iraq',475],\r\n    ['Italy',4644],\r\n    ['Japan',889],\r\n    ['Kenya',200],\r\n    //['Korea',8316],\r\n    ['Malaysia',232],\r\n    ['Morocco',203],\r\n    ['Netherlands',1],\r\n    ['Nigeria',1031],\r\n    ['Panama',215],\r\n    ['Romania',2744],\r\n    ['South Africa',1108],\r\n    ['Sri Lanka',18],\r\n    ['Tanzania', 1427],\r\n    ['Thailand', 404],\r\n    ['Russia', 100004],\r\n    ['Uganda', 506],\r\n    ['United Kingdom', 442],\r\n    ['United States', 108487],\r\n    ['Uruguay', 31],\r\n    ['Zimbabwe', 515],\r\n    \r\n    \r\n  ]}\r\n\r\n  options={{\r\n    region: 'world',\r\n    colorAxis: { colors: ['orange','yellow', 'green','blue', 'darkblue', 'red'] },\r\n  }}\r\n  // need to get a mapsApiKey for project.\r\n  // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n  mapsApiKey=\"YOUR_KEY_HERE\"\r\n // rootProps={{ 'data-testid': '1' }}\r\n/>\r\n</div>\r\n\r\n    )\r\n}\r\nexport default Smallpox;\r\n//adapted from https://www.youtube.com/watch?v=oX7Wqavzoc0","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\MersAndSars.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Upload.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Comparison.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\Header.js",["87"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    color : white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    padding:0px 10px;\r\n    z-index:10;\r\n    background-color: #ddd;\r\n    color: black;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:120px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom:5px solid ${props => props.current ? \"black\":\"transparent\"};\r\n    transition : border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    color:white;\r\n    text-align:right;\r\n    font-family: 'Myriad Pro Regular';\r\n`;\r\n\r\nexport default withRouter(({ location : {pathname} })=>(\r\n        <Header>\r\n            <List>\r\n                <SLink style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">\r\n                    <div style={{ fontSize: \"25px\" }}>🌏</div>\r\n                </SLink>\r\n\r\n                <Item current={pathname === \"/covid19\"}>\r\n                    <SLink to=\"/covid19\">Covid-19 </SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/mersandsars\"}>\r\n                    <SLink to=\"/mersandsars\">Mers and Sars </SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/smallpox\"}>\r\n                    <SLink to=\"/smallpox\">Smallpox </SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/comparison\"}>\r\n                    <SLink to=\"/comparison\">Comparison </SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/upload\"}>\r\n                    <SLink to=\"/upload\">Upload </SLink>\r\n                </Item>\r\n            </List>\r\n        </Header>\r\n    )\r\n\r\n)","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Covid19.js",["88","89","90","91","92","93","94"],"import React, { useEffect, useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\"\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Form from 'react-bootstrap/Form'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport NumberFormat from 'react-number-format';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { color } from 'd3';\r\n\r\n// Referances\r\n// Styling - https://react-bootstrap.github.io/components/cards/\r\n// Styling - https://react-bootstrap.github.io/getting-started/introduction/\r\n// Get API - https://www.npmjs.com/package/axios\r\n// Time formats - https://www.npmjs.com/package/react-moment\r\n// Search bar - https://react-bootstrap.github.io/components/forms/\r\n// Google map - https://www.npmjs.com/package/google-map-react\r\n// Number format - https://www.npmjs.com/package/react-number-format\r\n\r\n//  Reusable - <CardColumns> {countries} </CardColumns>\r\n\r\nfunction Covid19(){\r\n\r\n    // Chart styling https://www.npmjs.com/package/react-apexcharts\r\n    const series = [{\r\n        name: 'Cases',\r\n        data: [557, 81376, 199970, 958586, 3368225, 6284173]\r\n      }, {\r\n        name: 'Recovered',\r\n        data: [30, 30386, 80830, 193096, 1051859, 378025]\r\n      },\r\n      {\r\n        name: 'Deaths',\r\n        data: [17, 2771, 7967, 50481, 242367, 2692028]\r\n      }];\r\n      const options = {\r\n        chart: {\r\n          height: 350,\r\n          type: 'area',\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: [\r\n              \"1/22/20\",\r\n              \"2/26/20\",\r\n              \"3/17/20\",\r\n              \"4/1/20\",\r\n              \"5/1/20\",\r\n              \"6/1/20\"\r\n            ]\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'dd/MM/yy HH:mm'\r\n          },\r\n        },\r\n    };\r\n\r\n    // Storing data inside array\r\n    // Top cards\r\n    const[latest, setLatest] = useState([]);\r\n    // Country cards\r\n    const[results, setResults] = useState([]);\r\n    // Search bar\r\n    const[searchCountry, setSearchCountry] = useState(\"\");\r\n        \r\n    // Dealing with two APIs at once\r\n    useEffect(() => {\r\n        axios\r\n            .all([\r\n                // API for cards (cases, deaths, recoveres values) \r\n                axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n                // API for countrys\r\n                axios.get(\"https://corona.lmao.ninja/v2/countries\")\r\n        ])\r\n        .then(responceArr => {\r\n            setLatest(responceArr[0].data);\r\n            setResults(responceArr[1].data);\r\n        })\r\n        // Return an error (if any)\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n        \r\n    // Getting updated time by converting miliseconds\r\n    const date = new Date(parseInt(latest.updated))\r\n    const lastUpdated = date.toString();\r\n\r\n    // Filter search\r\n    const filterCountry = results.filter(item  =>{\r\n        // If search and country the same -> return info\r\n        return searchCountry !== \"\" ? item.country.includes(searchCountry) : item;\r\n    })\r\n\r\n    // Assigning country markers to cases \r\n    const countriesLocation = results.map((data, i) => {\r\n        return (\r\n            <div\r\n                // Using latitude and longitude to plot\r\n                lat={data.countryInfo.lat}\r\n                lng={data.countryInfo.long}\r\n                // Various styling of marker\r\n                style={{\r\n                    color: \"black\",\r\n                    backgroundColor: \"#FFF\",\r\n                    height: \"25px\",\r\n                    width: \"42px\",\r\n                    textAlign: \"center\",\r\n                    borderRadius: \"20%\",\r\n                }}\r\n            >   \r\n                \r\n                <img height=\"10px\" src={data.countryInfo.flag}/>\r\n                {data.cases}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // Creating a reusable component for country data\r\n    const countries = filterCountry.map((data, i) => {\r\n        return (\r\n            <Card\r\n            key={i}\r\n                bg=\"light\"\r\n                text=\"dark\"\r\n                className=\"text-center\"\r\n                style={{margin: \"10px\"}}\r\n            >\r\n            lat={data.countryInfo.lat}\r\n            lng={data.countryInfo.long}\r\n            \r\n            <Card.Body>\r\n                <Card.Title>{data.country}</Card.Title>\r\n                <Card.Text>Cases {data.cases}</Card.Text>\r\n                <Card.Text>Deaths {data.deaths}</Card.Text>\r\n                <Card.Text>Recovered {data.recovered}</Card.Text>\r\n                <Card.Text>Today's Cases {data.todayCases}</Card.Text>\r\n                <Card.Text>Today's Deaths {data.todayDeaths}</Card.Text>\r\n                <Card.Text>Active {data.active}</Card.Text>\r\n                <Card.Text>Critical {data.critical}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n        )\r\n    })\r\n\r\n    // Adapted from https://www.npmjs.com/package/react-columns\r\n    var queries = [{\r\n        columns: 2,\r\n        query: 'min-width: 500px'\r\n    }, {\r\n        columns: 3,\r\n        query: 'min-width: 1000px'\r\n    }];\r\n\r\n    return(\r\n        <div> \r\n            <Navbar bg=\"light\">\r\n                <Navbar.Brand>COVID-19 Live Data & Visuals </Navbar.Brand>\r\n            </Navbar>\r\n            \r\n              \r\n            <CardDeck>\r\n                <Card bg=\"secondary\" text=\"white\" className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Cases</Card.Title>\r\n                    <NumberFormat\r\n                        value={latest.cases} \r\n                        displayType={'text'} \r\n                        thousandSeparator={true}>\r\n                    </NumberFormat>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card bg=\"danger\" text={\"white\"} className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Deaths</Card.Title>\r\n                    <NumberFormat\r\n                        value={latest.deaths} \r\n                        displayType={'text'} \r\n                        thousandSeparator={true}>\r\n                    </NumberFormat>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card bg=\"success\" text={\"white\"} className=\"text-center\" style={{margin: \"10px\"}} border=\"primary\">\r\n                    <Card.Body>\r\n                    <Card.Title>Total Recovered</Card.Title>\r\n                    <NumberFormat\r\n                        value={latest.recovered} \r\n                        displayType={'text'} \r\n                        thousandSeparator={true}>\r\n                    </NumberFormat>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardDeck>  \r\n\r\n             <div style={{ height: '100vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyCMOO2VKuGpExDi9NjZ0jAofu5FOGJ4QbE\" }}\r\n                    defaultCenter={{lat: 28, lng: 3}}\r\n                    // Zoom level\r\n                    defaultZoom={3}\r\n                >\r\n                    {countriesLocation}\r\n                </GoogleMapReact>\r\n            </div>        \r\n            <br/>\r\n\r\n            <br></br>\r\n\r\n            <Navbar bg=\"light\">\r\n                <Navbar.Brand>Line Graph </Navbar.Brand>\r\n            </Navbar>\r\n            <br></br>\r\n\r\n            <ReactApexChart options={options} series={series} type=\"area\" height={500} />           \r\n\r\n            <br></br>\r\n\r\n            <Navbar bg=\"light\">\r\n                <Navbar.Brand> Statistics </Navbar.Brand>\r\n            </Navbar>\r\n            <br></br>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Covid19;","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Routes\\Home.js",["95"],"import { color } from 'd3';\r\nimport React from 'react'\r\n  \r\n    function Home() {\r\n        return (\r\n          <div\r\n            style={{\r\n            textAlign: \"center\",\r\n            fontSize:\"40px\",\r\n            fontFamily: \"Nanum Gothic\",\r\n            color: \"white\"\r\n         }}\r\n        >\r\n\r\n          <h2>Data Visualization & Analysis</h2>\r\n\r\n          \r\n          </div>\r\n        );\r\n    }\r\n\r\nexport default Home;","C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\Components\\ChartWrapper2.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\VirusDropdown.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\SymptomDropdown.js",[],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3MersSars.js",["96","97","98","99","100"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Comparison.js",["101","102","103","104"],"C:\\Users\\gina7\\Desktop\\4th-Year-Final-Project\\4th-year-final-project\\src\\D3\\D3Piechart.js",["105","106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"117","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"119","line":40,"column":7,"nodeType":"115","messageId":"116","endLine":40,"endColumn":9},{"ruleId":"113","severity":1,"message":"120","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":19},{"ruleId":"113","severity":1,"message":"121","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":12},{"ruleId":"113","severity":1,"message":"122","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":15},{"ruleId":"113","severity":1,"message":"123","line":74,"column":26,"nodeType":"115","messageId":"116","endLine":74,"endColumn":42},{"ruleId":"124","severity":1,"message":"125","line":123,"column":17,"nodeType":"126","endLine":123,"endColumn":65},{"ruleId":"113","severity":1,"message":"127","line":130,"column":11,"nodeType":"115","messageId":"116","endLine":130,"endColumn":20},{"ruleId":"113","severity":1,"message":"128","line":157,"column":9,"nodeType":"115","messageId":"116","endLine":157,"endColumn":16},{"ruleId":"113","severity":1,"message":"122","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":15},{"ruleId":"113","severity":1,"message":"129","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"130","line":4,"column":7,"nodeType":"115","messageId":"116","endLine":4,"endColumn":10},{"ruleId":"113","severity":1,"message":"131","line":5,"column":7,"nodeType":"115","messageId":"116","endLine":5,"endColumn":11},{"ruleId":"113","severity":1,"message":"132","line":61,"column":15,"nodeType":"115","messageId":"116","endLine":61,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":75,"column":15,"nodeType":"115","messageId":"116","endLine":75,"endColumn":20},{"ruleId":"113","severity":1,"message":"129","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"131","line":17,"column":7,"nodeType":"115","messageId":"116","endLine":17,"endColumn":11},{"ruleId":"113","severity":1,"message":"134","line":18,"column":7,"nodeType":"115","messageId":"116","endLine":18,"endColumn":11},{"ruleId":"113","severity":1,"message":"135","line":19,"column":7,"nodeType":"115","messageId":"116","endLine":19,"endColumn":11},{"ruleId":"113","severity":1,"message":"129","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"136","line":4,"column":7,"nodeType":"115","messageId":"116","endLine":4,"endColumn":10},{"ruleId":"113","severity":1,"message":"137","line":5,"column":7,"nodeType":"115","messageId":"116","endLine":5,"endColumn":11},{"ruleId":"113","severity":1,"message":"138","line":21,"column":17,"nodeType":"115","messageId":"116","endLine":21,"endColumn":21},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Dropdown' is defined but never used.","'H1' is assigned a value but never used.","'CardColumns' is defined but never used.","'Form' is defined but never used.","'color' is defined but never used.","'setSearchCountry' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'countries' is assigned a value but never used.","'queries' is assigned a value but never used.","'svg' is defined but never used.","'url' is assigned a value but never used.","'url2' is assigned a value but never used.","'tsvg2' is assigned a value but never used.","'tsvg3' is assigned a value but never used.","'url3' is assigned a value but never used.","'url4' is assigned a value but never used.","'pie' is assigned a value but never used.","'data' is assigned a value but never used.","'svgg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]